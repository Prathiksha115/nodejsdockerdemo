
1.MASTER SLAVE CONNECTION

go to jenkins-> Manage jenkins-> Configure system ->Jenkins location should have master ip adress

manage jenkins -> Manage nodes and clouds-> New node-> Permanent agent
 
give a name (slave) ->change  remore root directory /home/msis/Downloads -> Launh method is launch agent by connecting it to controller 
 
From the master pc connect to slave by ssh -> sudo ssh msis@172.16.51.45(slave must be online)

then download agent.jar -> sudo scp agent.jar msis@172.16.51.45:/home/msis/Downloads (Give the slaves ip)

copy the curl commands from the slave node and execute ->then copy the jar command with sudo and run

(node should become active in the master)

Then run the ip of the slave with port number:
172.16.51.45:3000 #This should display the message

#if firewall is enabled : sudo ufw disable #to check status

===========================================================================================================================

2.NodeJs

to check and start jenkins -> systemctl status jenkins -> sudo systemctl restart jenkins

new item - > name -> freestyle project -> ok

repo copy sirs repo -> check branch name -> */main


build steps -> Execute shell -> #Write commands 

sudo apt-get install nodejs npm -y
sudo npm install
sudo npm install -g pm2
sudo pm2 start app.js

#Then build and if it doesnt work do the following
sudo su - #not necessary
usermod -a -G sudo jenkins  #not necessary
sudo visudo
#Make changes in the end
@includedir /etc/sudoers.d

jenkins ALL=(ALL) NOPASSWD: ALL


service jenkins start

And then build
#IF any error add slave node 

======================================================================================================================

3.ANSIBLE

Do we have to write any ansible playbook first? or will it be present already?

First connect to another PC which becomes slave

cd AnsibleWorkUpdated/
cd ansible-apache/

sudo nano hosts  (change the ip to slave and save)
#enter passwords

sudo ssh-keygen -t rsa
#Enter filename as msis and overwrite
sudo ssh-copy-id -i msis.pub msis@172.16.51.45(slave ip)


sudo apt-get install sshpass
sudo apt-get install ansible

sudo ansible-playbook apache.yml -i hosts -c ssh --ask-pass
sudo ansible-playbook apache.yml -i hosts -c ssh -K

run - slave ip address without port name 

================================================================================================================================

4.Docker using jenkins

Login docker hub in browser 
login in cmd ->sudo docker status -> sudo docker logout ->sudo docker login

First create freestle project -> https://github.com/meghaprabhu1999/nodejsdockerdemo.git -> change it to main

buildstep-> Docker build and publish -> dockername/anyname (vrushali123/dockersample) -> tag(latest2)

Add registry credentials(username and password) ->save and build 


check docker hub
====================================================================================

First create freestle project -> https://github.com/meghaprabhu1999/nodejsdockerdemo.git -> change it to main

Build-step-> Execute shell
sudo docker build -t dockerimg3:latest3 .
sudo docker run -it -d --name cont8 -p 3020:8080 dockerimg3:latest3
sudo docker tag dockerimg3:latest3 vrushali123/dockerimg3
sudo docker push vrushali123/dockerimg3

apply and save

check browser for output -3020(your ip)
======================================================================================

IN CMD
go to github repo -> download file -> paste in desktop ->delete readme file ->open in terminal(3 dots)

sudo docker build -t dockerimg3:latest3 .
sudo docker run -it -d --name cont8 -p 3020:8080 dockerimg3:latest3  (sudo docker run -itd --name cont50 -p 3035:80 docker:v1)
sudo docker tag dockerimg3:latest3 vrushali123/dockerimg3
sudo docker push vrushali123/dockerimg3

check browser - 3020

=====================================================================================

#install docker if not installed
sudo apt-get install docker.io
sudo docker login
sudo apt update

In the terminal execute the following commands
sudo usermod -aG docker jenkins
sudo usermod -aG root jenkins
sudo chmod 664 /var/run/docker.sock
sudo chmod 777 /var/run/docker.sock

service jenkins start

================================================================================================================================

6.Kubernetes

ssh msis@172.16.51.124  #to the ip that sir gives

kubectl get pods
kubectl get nodes
kubectl get deployments (if you get output kubernetes is working)
 
cd basic-php-website/ (if not present sudo git clone path.git)

ls

sudo nano hosts bookalbum_deployment.yaml (sudo vi bookalbum_deployment.yaml)

apiVersion: apps/v1
kind: Deployment
metadata:
  name: munsh
  labels:
    app: munsh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: munsh
  template:
    metadata:
      labels:
        app: munsh
    spec:
      containers:
      - name: munsh
        image: munsh/docimg3:latest
        ports:
        - containerPort: 80

 

sudo nano hosts bookalbum_service.yaml  (sudo vi bookalbum_deployment.yaml)

apiVersion: v1
kind: Service
metadata:
  labels:
    app: munsh
  name: munsh
spec:
  type: NodePort
  ports:
    - port: 90
      targetPort: 90
      protocol: TCP
  selector:
    app: munsh

 

kubectl create -f bookalbum_deployment.yaml
kubectl apply -f bookalbum_deployment.yaml 
kubectl get pods

kubectl describe pods/munsh-85bff5568b-mmjht

kubectl create -f bookalbum_service.yaml
kubectl apply -f bookalbum_service.yaml
kubectl get svc ->show that the service you created is running- check the ip address)

============================================================================================================================

7.Maven using tomcat 

sudo apt-get install tomcat9 tomcat9-admin
sudo systemctl restart tomcat9
sudo systemctl status tomcat9

 
sudo nano /etc/tomcat9/tomcat-users.xml     
add below code in it 
<user username="jenkins" password="jenkins@123" roles="manager-script,admin-gui"/>


create a freeStyleProject -- Java_Maven_JSP_Build
add git repo -- https://github.com/sreepathysois/MyMavenApp.git
build steps --  Invoke top-level Maven targets  --- mymaven, goals - clean compile

Build the apllication 

Post-build Actions   --  Build other projects --> Java_Maven_JSP_Package 
appy and save


create a freeStyleProject -- Java_Maven_JSP_Package
add git repo -- https://github.com/sreepathysois/MyMavenApp.git
build steps --  Invoke top-level Maven targets  --- mymaven, goals - package
Post-build Actions   --  Build other projects --> Java_Maven_JSP_Deploy 
appy and save

 
create a freeStyleProject -- Java_Maven_JSP_Deploy
add git repo -- https://github.com/sreepathysois/MyMavenApp.git
Post-build Actions   --   Deploy war/ear to a container
			WAR/EAR files -> **/*.war 
			context path --> MyMavenApp
                         containers --  select --Tomcat 9.x Remote 
                         credentials -- give creds as given in ( sudo nano /etc/tomcat9/tomcat-users.xml)
                       tomcat url -- http://172.16.51.67:8080  --> slave ip
appy and save

Create a Build Pipeline using Build Pipeline plugin.  

Java_Maven_JSP_Compile  à  Java_Maven_JSP_Package Project à Java_Maven_JSP_Deploy Project.  
